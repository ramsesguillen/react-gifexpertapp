{"version":3,"sources":["components/AddCategory.js","components/Footer.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","placeholder","type","value","onChange","target","handleInputChange","className","Footer","fecha","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","GifExpertApp","categories","Date","getFullYear","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,uBAAMC,SATW,SAAEC,GACnBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAKlB,UACI,uBACIO,YAAY,mBACZC,KAAK,OACLC,MAAQV,EACRW,SAAY,SAACR,GAAD,OAlBE,SAAEA,GACxBF,EAAeE,EAAES,OAAOF,OAiBGG,CAAkBV,MAEzC,qBAAKW,UAAU,kBCzBdC,EAAS,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrB,OACI,wBAAQF,UAAU,SAAlB,SACI,2DAA4BE,EAA5B,c,+BCNCC,EAAQ,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAUH,GAD7C,+DAEDI,MAAOF,GAFN,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAG,MAAK,CAC3BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QARjB,kBAWbM,GAXa,4CAAH,sDCERO,EAAc,SAAC,GAAwB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACtC,OACI,sBAAKN,UAAU,yCAAf,UACI,qBAAKoB,IAAMd,EAAMe,IAAML,IACvB,4BAAIA,QCDHM,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECDZ,SAAEA,GAAe,IAAD,EAEfnB,mBAAS,CAC/B0B,KAAM,GACNY,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAiBzC,OAVAC,qBAAW,WACPvB,EAAUC,GACLuB,MAAM,SAAAC,GACHH,EAAS,CACLd,KAAMiB,EACNL,SAAS,SAGtB,CAAEnB,IAEEoB,EDZ2BK,CAAezB,GAAnCa,EAJuB,EAI7BN,KAAcY,EAJe,EAIfA,QAQtB,OACI,qCACI,oBAAIvB,UAAU,QAAd,SAAwBI,IAEtBmB,GAAW,sBAAKvB,UAAU,UAAf,UACL,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,aAIvB,qBAAKA,UAAU,YAAf,SAEYiB,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,SAM7B,qBAAKf,UAAU,uBEJZ8B,EA/BM,WAAO,IAAD,EAEa7C,mBAAS,CAAC,mBAFvB,mBAEhB8C,EAFgB,KAEJ/C,EAFI,KAGjBkB,GAAS,IAAI8B,MAAOC,cAM1B,OACI,qCACI,oBAAIjC,UAAU,SAAd,0BACA,cAAC,EAAD,CACIhB,cAAgBA,IAGpB,qBAAKgB,UAAU,sBAAf,SAEQ+B,EAAWlB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,QAMtB,cAAC,EAAD,CAAQF,MAAQA,Q,MC1B5BgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.487e8556.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react' //* rafc - snipet\r\nimport PropTypes  from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n        if ( inputValue.trim().length > 2) {\r\n            setCategories( cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                placeholder='Buscar gif de...'\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange= { (e) => handleInputChange(e) }\r\n            />\r\n            <div className=\"separador\"></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Footer = ({ fecha }) => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p>Guill√©n Ramses Salinas { fecha } &copy;</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nFooter.propTypes = {\r\n    fecha: PropTypes.number.isRequired\r\n}","export const getGifts = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=Wu11gQtMk4XHBVp3XXe1dBEkerAPXEhd`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => ({\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images.downsized_medium.url\r\n    }));\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifts } from '../hooks/useFetchGifs';\r\n// import { getGifts } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    const { data: images, loading } = useFetchGifts( category );\r\n\r\n    // el codigo adentro solo se ejecuta una vez\r\n    // useEffect( () => {\r\n    //     getGifts( category )\r\n    //         .then( imgs => setImages(imgs));\r\n    // }, [ category ]);\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"boton\">{ category }</h2>\r\n\r\n            { loading && <div className=\"spinner\">\r\n                    <div className=\"rect1\"></div>\r\n                    <div className=\"rect2\"></div>\r\n                    <div className=\"rect3\"></div>\r\n                    <div className=\"rect4\"></div>\r\n                    <div className=\"rect5\"></div>\r\n                </div>\r\n            }\r\n\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem\r\n                                key={img.id}\r\n                                {...img}\r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n            <div className=\"separador-grid\"></div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifts } from \"../helpers/getGifs\";\r\n// import { getGifts } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifts = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifts( category )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            });\r\n    }, [ category ]);\r\n\r\n    return state; // { data: [], loading: true }\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { Footer } from './components/Footer';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Congratulation']);\r\n    const fecha =  new Date().getFullYear();\r\n\r\n    // const handleadd = () => {\r\n    //     setCategories([...categories, 'One piece']);\r\n    //     // setCategories( cats => [...cats, 'One piece']);\r\n    // };\r\n    return (\r\n        <>\r\n            <h2 className=\"titulo\">GifExpertApp</h2>\r\n            <AddCategory\r\n                setCategories={ setCategories }\r\n            />\r\n\r\n            <div className=\"contenido-principal\">\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid\r\n                            key={ category }\r\n                            category={ category }\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n            <Footer fecha={ fecha }/>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}